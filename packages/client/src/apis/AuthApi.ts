/* tslint:disable */
/* eslint-disable */
/**
 * ISOK API
 * Openapi of isok api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Creds,
  Token,
} from '../models/index';
import {
    CredsFromJSON,
    CredsToJSON,
    TokenFromJSON,
    TokenToJSON,
} from '../models/index';

export interface AuthV1Request {
    creds: Creds;
}

export interface RegisterV1Request {
    creds: Creds;
}

/**
 * 
 */
export class AuthApi extends runtime.BaseAPI {

    /**
     * Authenticate
     */
    async authV1Raw(requestParameters: AuthV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Token>> {
        if (requestParameters['creds'] == null) {
            throw new runtime.RequiredError(
                'creds',
                'Required parameter "creds" was null or undefined when calling authV1().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/auth`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CredsToJSON(requestParameters['creds']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TokenFromJSON(jsonValue));
    }

    /**
     * Authenticate
     */
    async authV1(requestParameters: AuthV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Token> {
        const response = await this.authV1Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Register user
     */
    async registerV1Raw(requestParameters: RegisterV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Token>> {
        if (requestParameters['creds'] == null) {
            throw new runtime.RequiredError(
                'creds',
                'Required parameter "creds" was null or undefined when calling registerV1().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v1/register`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CredsToJSON(requestParameters['creds']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TokenFromJSON(jsonValue));
    }

    /**
     * Register user
     */
    async registerV1(requestParameters: RegisterV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Token> {
        const response = await this.registerV1Raw(requestParameters, initOverrides);
        return await response.value();
    }

}
