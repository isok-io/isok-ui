/* tslint:disable */
/* eslint-disable */
/**
 * ISOK API
 * Openapi of isok api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CheckSchemaInputKindOneOf2
 */
export interface CheckSchemaInputKindOneOf2 {
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof CheckSchemaInputKindOneOf2
     */
    defaultValue: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof CheckSchemaInputKindOneOf2
     */
    keyPlaceholder?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CheckSchemaInputKindOneOf2
     */
    type: CheckSchemaInputKindOneOf2TypeEnum;
    /**
     * 
     * @type {string}
     * @memberof CheckSchemaInputKindOneOf2
     */
    valuePlaceholder?: string | null;
}


/**
 * @export
 */
export const CheckSchemaInputKindOneOf2TypeEnum = {
    KeyValue: 'KeyValue'
} as const;
export type CheckSchemaInputKindOneOf2TypeEnum = typeof CheckSchemaInputKindOneOf2TypeEnum[keyof typeof CheckSchemaInputKindOneOf2TypeEnum];


/**
 * Check if a given object implements the CheckSchemaInputKindOneOf2 interface.
 */
export function instanceOfCheckSchemaInputKindOneOf2(value: object): value is CheckSchemaInputKindOneOf2 {
    if (!('defaultValue' in value) || value['defaultValue'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function CheckSchemaInputKindOneOf2FromJSON(json: any): CheckSchemaInputKindOneOf2 {
    return CheckSchemaInputKindOneOf2FromJSONTyped(json, false);
}

export function CheckSchemaInputKindOneOf2FromJSONTyped(json: any, ignoreDiscriminator: boolean): CheckSchemaInputKindOneOf2 {
    if (json == null) {
        return json;
    }
    return {
        
        'defaultValue': json['defaultValue'],
        'keyPlaceholder': json['keyPlaceholder'] == null ? undefined : json['keyPlaceholder'],
        'type': json['type'],
        'valuePlaceholder': json['valuePlaceholder'] == null ? undefined : json['valuePlaceholder'],
    };
}

export function CheckSchemaInputKindOneOf2ToJSON(json: any): CheckSchemaInputKindOneOf2 {
    return CheckSchemaInputKindOneOf2ToJSONTyped(json, false);
}

export function CheckSchemaInputKindOneOf2ToJSONTyped(value?: CheckSchemaInputKindOneOf2 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'defaultValue': value['defaultValue'],
        'keyPlaceholder': value['keyPlaceholder'],
        'type': value['type'],
        'valuePlaceholder': value['valuePlaceholder'],
    };
}

