/* tslint:disable */
/* eslint-disable */
/**
 * ISOK API
 * Openapi of isok api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserSimpleView } from './UserSimpleView';
import {
    UserSimpleViewFromJSON,
    UserSimpleViewFromJSONTyped,
    UserSimpleViewToJSON,
    UserSimpleViewToJSONTyped,
} from './UserSimpleView';

/**
 * 
 * @export
 * @interface OrganisationView
 */
export interface OrganisationView {
    /**
     * 
     * @type {string}
     * @memberof OrganisationView
     */
    id: string;
    /**
     * 
     * @type {Array<UserSimpleView>}
     * @memberof OrganisationView
     */
    members: Array<UserSimpleView>;
    /**
     * 
     * @type {string}
     * @memberof OrganisationView
     */
    name: string;
    /**
     * 
     * @type {{ [key: string]: string | null; }}
     * @memberof OrganisationView
     */
    tags: { [key: string]: string | null; };
}

/**
 * Check if a given object implements the OrganisationView interface.
 */
export function instanceOfOrganisationView(value: object): value is OrganisationView {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('members' in value) || value['members'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('tags' in value) || value['tags'] === undefined) return false;
    return true;
}

export function OrganisationViewFromJSON(json: any): OrganisationView {
    return OrganisationViewFromJSONTyped(json, false);
}

export function OrganisationViewFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganisationView {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'members': ((json['members'] as Array<any>).map(UserSimpleViewFromJSON)),
        'name': json['name'],
        'tags': json['tags'],
    };
}

export function OrganisationViewToJSON(json: any): OrganisationView {
    return OrganisationViewToJSONTyped(json, false);
}

export function OrganisationViewToJSONTyped(value?: OrganisationView | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'members': ((value['members'] as Array<any>).map(UserSimpleViewToJSON)),
        'name': value['name'],
        'tags': value['tags'],
    };
}

