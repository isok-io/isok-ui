/* tslint:disable */
/* eslint-disable */
/**
 * ISOK API
 * Openapi of isok api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CheckZone } from './CheckZone';
import {
    CheckZoneFromJSON,
    CheckZoneFromJSONTyped,
    CheckZoneToJSON,
    CheckZoneToJSONTyped,
} from './CheckZone';
import type { CheckKind } from './CheckKind';
import {
    CheckKindFromJSON,
    CheckKindFromJSONTyped,
    CheckKindToJSON,
    CheckKindToJSONTyped,
} from './CheckKind';

/**
 * 
 * @export
 * @interface ApiCheck
 */
export interface ApiCheck {
    /**
     * 
     * @type {string}
     * @memberof ApiCheck
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof ApiCheck
     */
    interval: number;
    /**
     * 
     * @type {CheckKind}
     * @memberof ApiCheck
     */
    kind: CheckKind;
    /**
     * 
     * @type {string}
     * @memberof ApiCheck
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ApiCheck
     */
    tenant: string;
    /**
     * 
     * @type {Array<CheckZone>}
     * @memberof ApiCheck
     */
    zones: Array<CheckZone>;
}

/**
 * Check if a given object implements the ApiCheck interface.
 */
export function instanceOfApiCheck(value: object): value is ApiCheck {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('interval' in value) || value['interval'] === undefined) return false;
    if (!('kind' in value) || value['kind'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('tenant' in value) || value['tenant'] === undefined) return false;
    if (!('zones' in value) || value['zones'] === undefined) return false;
    return true;
}

export function ApiCheckFromJSON(json: any): ApiCheck {
    return ApiCheckFromJSONTyped(json, false);
}

export function ApiCheckFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiCheck {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'interval': json['interval'],
        'kind': CheckKindFromJSON(json['kind']),
        'name': json['name'],
        'tenant': json['tenant'],
        'zones': ((json['zones'] as Array<any>).map(CheckZoneFromJSON)),
    };
}

export function ApiCheckToJSON(json: any): ApiCheck {
    return ApiCheckToJSONTyped(json, false);
}

export function ApiCheckToJSONTyped(value?: ApiCheck | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'interval': value['interval'],
        'kind': CheckKindToJSON(value['kind']),
        'name': value['name'],
        'tenant': value['tenant'],
        'zones': ((value['zones'] as Array<any>).map(CheckZoneToJSON)),
    };
}

