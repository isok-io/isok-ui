/* tslint:disable */
/* eslint-disable */
/**
 * ISOK API
 * Openapi of isok api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Zone } from './Zone';
import {
    ZoneFromJSON,
    ZoneFromJSONTyped,
    ZoneToJSON,
    ZoneToJSONTyped,
} from './Zone';

/**
 * 
 * @export
 * @interface Region
 */
export interface Region {
    /**
     * 
     * @type {string}
     * @memberof Region
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Region
     */
    name: string;
    /**
     * 
     * @type {{ [key: string]: string | null; }}
     * @memberof Region
     */
    tags: { [key: string]: string | null; };
    /**
     * 
     * @type {Array<Zone>}
     * @memberof Region
     */
    zones: Array<Zone>;
}

/**
 * Check if a given object implements the Region interface.
 */
export function instanceOfRegion(value: object): value is Region {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('tags' in value) || value['tags'] === undefined) return false;
    if (!('zones' in value) || value['zones'] === undefined) return false;
    return true;
}

export function RegionFromJSON(json: any): Region {
    return RegionFromJSONTyped(json, false);
}

export function RegionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Region {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'tags': json['tags'],
        'zones': ((json['zones'] as Array<any>).map(ZoneFromJSON)),
    };
}

export function RegionToJSON(json: any): Region {
    return RegionToJSONTyped(json, false);
}

export function RegionToJSONTyped(value?: Region | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'tags': value['tags'],
        'zones': ((value['zones'] as Array<any>).map(ZoneToJSON)),
    };
}

