/* tslint:disable */
/* eslint-disable */
/**
 * ISOK API
 * Openapi of isok api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CheckSchemaInput } from './CheckSchemaInput';
import {
    CheckSchemaInputFromJSON,
    CheckSchemaInputFromJSONTyped,
    CheckSchemaInputToJSON,
    CheckSchemaInputToJSONTyped,
} from './CheckSchemaInput';
import type { CheckSchemaCheckKind } from './CheckSchemaCheckKind';
import {
    CheckSchemaCheckKindFromJSON,
    CheckSchemaCheckKindFromJSONTyped,
    CheckSchemaCheckKindToJSON,
    CheckSchemaCheckKindToJSONTyped,
} from './CheckSchemaCheckKind';

/**
 * 
 * @export
 * @interface CheckSchema
 */
export interface CheckSchema {
    /**
     * 
     * @type {Array<CheckSchemaInput>}
     * @memberof CheckSchema
     */
    inputs: Array<CheckSchemaInput>;
    /**
     * 
     * @type {Array<CheckSchemaInput>}
     * @memberof CheckSchema
     */
    inputsAdvanced: Array<CheckSchemaInput>;
    /**
     * 
     * @type {CheckSchemaCheckKind}
     * @memberof CheckSchema
     */
    type: CheckSchemaCheckKind;
    /**
     * 
     * @type {number}
     * @memberof CheckSchema
     */
    version: number;
}



/**
 * Check if a given object implements the CheckSchema interface.
 */
export function instanceOfCheckSchema(value: object): value is CheckSchema {
    if (!('inputs' in value) || value['inputs'] === undefined) return false;
    if (!('inputsAdvanced' in value) || value['inputsAdvanced'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    return true;
}

export function CheckSchemaFromJSON(json: any): CheckSchema {
    return CheckSchemaFromJSONTyped(json, false);
}

export function CheckSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): CheckSchema {
    if (json == null) {
        return json;
    }
    return {
        
        'inputs': ((json['inputs'] as Array<any>).map(CheckSchemaInputFromJSON)),
        'inputsAdvanced': ((json['inputs_advanced'] as Array<any>).map(CheckSchemaInputFromJSON)),
        'type': CheckSchemaCheckKindFromJSON(json['type']),
        'version': json['version'],
    };
}

export function CheckSchemaToJSON(json: any): CheckSchema {
    return CheckSchemaToJSONTyped(json, false);
}

export function CheckSchemaToJSONTyped(value?: CheckSchema | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'inputs': ((value['inputs'] as Array<any>).map(CheckSchemaInputToJSON)),
        'inputs_advanced': ((value['inputsAdvanced'] as Array<any>).map(CheckSchemaInputToJSON)),
        'type': CheckSchemaCheckKindToJSON(value['type']),
        'version': value['version'],
    };
}

