/* tslint:disable */
/* eslint-disable */
/**
 * ISOK API
 * Openapi of isok api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CheckKind } from './CheckKind';
import {
    CheckKindFromJSON,
    CheckKindFromJSONTyped,
    CheckKindToJSON,
    CheckKindToJSONTyped,
} from './CheckKind';
import type { Duration } from './Duration';
import {
    DurationFromJSON,
    DurationFromJSONTyped,
    DurationToJSON,
    DurationToJSONTyped,
} from './Duration';

/**
 * 
 * @export
 * @interface Check
 */
export interface Check {
    /**
     * 
     * @type {string}
     * @memberof Check
     */
    id: string;
    /**
     * 
     * @type {Duration}
     * @memberof Check
     */
    interval: Duration;
    /**
     * 
     * @type {CheckKind}
     * @memberof Check
     */
    kind: CheckKind;
    /**
     * 
     * @type {string}
     * @memberof Check
     */
    name: string;
}

/**
 * Check if a given object implements the Check interface.
 */
export function instanceOfCheck(value: object): value is Check {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('interval' in value) || value['interval'] === undefined) return false;
    if (!('kind' in value) || value['kind'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function CheckFromJSON(json: any): Check {
    return CheckFromJSONTyped(json, false);
}

export function CheckFromJSONTyped(json: any, ignoreDiscriminator: boolean): Check {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'interval': DurationFromJSON(json['interval']),
        'kind': CheckKindFromJSON(json['kind']),
        'name': json['name'],
    };
}

export function CheckToJSON(json: any): Check {
    return CheckToJSONTyped(json, false);
}

export function CheckToJSONTyped(value?: Check | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'interval': DurationToJSON(value['interval']),
        'kind': CheckKindToJSON(value['kind']),
        'name': value['name'],
    };
}

